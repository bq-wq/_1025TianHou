<?xml version="1.0" encoding="UTF-8"?>

<!--
    dtd : document type definition    xxx.dtd  xxx2.dtd
    xsd : xml schema definition       xxx.xsd  xxx2.xsd
    文档约束：标签，顺序，层级，属性
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- shiro配置 -->
    <!-- Realm -->
    <bean id="myRealm" class="com.qf.realm.MyRealm">
        <property name="userService" ref="userServiceImpl"/>
        <!--<property name="roleService" ref="roleServiceImpl"/>
        <property name="permissionService" ref="permissionServiceImpl"/>-->
        <!-- 密码比对器 -->
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="SHA-256"/>
                <!-- true means hex encoded, false means base64 encoded -->
                <property name="storedCredentialsHexEncoded" value="false"/>
                <property name="hashIterations" value="10000"/>
            </bean>
        </property>
    </bean>

    <!-- 声明SecurityManager -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myRealm"/>
        <!--    &lt;!&ndash; 记住我管理器 &ndash;&gt;
            <property name="rememberMeManager" ref="rememberMeManager"/>
            &lt;!&ndash; session管理器 &ndash;&gt;
            <property name="sessionManager" ref="sessionManager"/>-->
    </bean>

    <!-- shiroFilter -->
    <!-- 生产SpringShiroFilter
         （ 持有shiro的过滤相关规则，可进行请求的过滤校验，校验请求是否合法 ）
    -->  <!-- shiroFilter-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 注入核心对象 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 未登录，没权限时的跳转路径 -->
        <property name="loginUrl" value="/user/login"/>
        <!-- <property name="unauthorizedUrl" value="/user/perms/error"/>-->
        <!-- 过滤器链 -->
        <property name="filterChainDefinitions">
            <value>

                /cart/addcart=authc
                <!-- /user/query=anon
                /user/all=authc,roles["banzhang"]
                /user/logout=logout
                /user/insert=authc,roles["banfu"]
                /user/update=authc,perms[""student:update""]
                /order/insert=authc,roles["xuewei"]-->

            </value>
        </property>
    </bean>

    <!-- 记住我的Cookie
     <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
         rememberMe是cookie值中的key，value时用户名的密文
              cookie["rememberMe":"deleteMe"] 此cookie每次登陆后都会写出，用于清除之前的cookie
              cookie["rememberMe":username的密文] 此cookie也会在登录后写出，用于记录最新的username
             （ops: 如上设计，既能保证每次登陆后重新记录cookie，也能保证切换账号时，记录最新账号）

         <property name="name" value="rememberMe04"/>
                 cookie只在http请求中可用，那么通过js脚本将无法读取到cookie信息，有效防止cookie被窃取 &ndash;&gt;
         <property name="httpOnly" value="true"/>
                      cookie的生命周期，单位：秒
         <property name="maxAge" value="604800"/>&lt;!&ndash; 7天 &ndash;&gt;
     </bean>-->

    <!-- &lt;!&ndash;记住我管理器&ndash;&gt;
     <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
         <property name="cookie" ref="rememberMeCookie"/>
     </bean>
 -->
    <!-- 会话Cookie模板 默认可省-->
    <!--<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        &lt;!&ndash; cookie的 key="sid" &ndash;&gt;
        <property name="name" value="JSESSIONID04"/>
        &lt;!&ndash; 只允许http请求访问cookie &ndash;&gt;
        <property name="httpOnly" value="true"/>
        &lt;!&ndash; cookie过期时间，-1:存活一个会话 ,单位:秒 ，默认为-1&ndash;&gt;
        <property name="maxAge" value="-1"/>
    </bean>
    <bean id="sessionManager"
          class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        &lt;!&ndash; 默认值和配置中给出的一致，所bean:sessionIdCookie 可以省略 &ndash;&gt;
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        &lt;!&ndash; session全局超时时间, 单位:毫秒 ，30分钟 默认值为1800000&ndash;&gt;
        <property name="globalSessionTimeout" value="1800000"/>
        &lt;!&ndash; 注册session监听器 &ndash;&gt;
        <property name="sessionListeners">
            <list>
                <bean class="com.qf.session.MySessionListener"></bean>
            </list>
        </property>
        &lt;!&ndash; session检测的时间间隔 &ndash;&gt;
        <property name="sessionValidationInterval" value="15000"></property>
    </bean>-->
</beans>